name: Terraform Apply - FastAPI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'test/fastapi/**'
      - 'test/modules/**'

jobs:
  terraform-fastapi-dev:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Terraform Init
      working-directory: test/fastapi
      run: terraform init

    - name: Terraform Apply
      working-directory: test/fastapi
      run: terraform apply -auto-approve

    - name: Debugging
      run: |
        echo "FastAPI EIP: $(terraform output -raw fastapi_eip)"
        echo "Celery EIP: $(terraform output -raw celery_eip)"
        echo "Chroma EIP: $(terraform output -raw chroma_eip)"

    - name: Get EC2 Public IPs from Terraform Output
      working-directory: test/fastapi
      run: |
        echo "DEV_FASTAPI_IP=$(terraform output -raw fastapi_eip)" >> $GITHUB_ENV
        echo "DEV_CELERY_IP=$(terraform output -raw celery_eip)" >> $GITHUB_ENV
        echo "DEV_CHROMA_IP=$(terraform output -raw chroma_eip)" >> $GITHUB_ENV
    

    - name: Update GitHub Organization Variables
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const variables = {
            DEV_FASTAPI_IP: process.env.DEV_FASTAPI_IP,
            DEV_CELERY_IP: process.env.DEV_CELERY_IP,
            DEV_CHROMA_IP: process.env.DEV_CHROMA_IP
          };

          for (const [key, value] of Object.entries(variables)) {
            await github.request('PATCH /orgs/TU-NEBULA/actions/variables/' + key, {
              org: 'TU-NEBULA',
              name: key,
              value: value
            });
          }
